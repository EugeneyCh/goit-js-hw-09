{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,aAC9BC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAItC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIJ,GAEZK,YAAW,KACLL,EAEFF,EAAI,C,SAAEH,EAAUW,MAAAV,IAGhBG,EAAI,C,SAAEJ,EAAUW,MAAAV,GAAQ,GAEzBA,EAAM,G,CAfbR,EAAKmB,iBAAiB,UAmBtB,SAAyBC,GACvBA,EAAIC,iBAEJN,QAAQC,IAAI,uBACZ,IAAIM,EAAaC,OAAOpB,EAAMqB,OAC1BC,EAAYF,OAAOnB,EAAKoB,OACxBE,EAAcH,OAAOlB,EAAOmB,OAChC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CAGrCrB,EAAcqB,EAFOL,EAAaG,GAAaE,EAAI,IAGhDC,MAAK,EAACrB,SAAEA,EAAUW,MAAAW,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBzB,QAAiBsB,MAAU,IAGnDI,OAAM,EAAC1B,SAAEA,EAAUW,MAAAgB,MAClBJ,EAAAhC,GAASiC,OAAOI,QACd,sBAAoB5B,QAAe2B,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form.form');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(shouldResolve);\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(evt) {\n  evt.preventDefault();\n\n  console.log('Promice might start');\n  let valueDelay = Number(delay.value);\n  let valueStep = Number(step.value);\n  let valueAmount = Number(amount.value);\n  for (let i = 1; i <= valueAmount; i++) {\n    const promiseDelay = valueDelay + valueStep * (i - 1);\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","res","rej","shouldResolve","Math","random","console","log","setTimeout","delay","addEventListener","evt","preventDefault","valueDelay","Number","value","valueStep","valueAmount","i","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.4a6d531b.js.map"}